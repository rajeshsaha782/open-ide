{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<!-- <h2>{{code}} </h2> -->\\n<button (click)='run()'>RUN</button> \\n<pre><b>stdout:</b> {{result}}</pre>\\n<pre style=\\\"color: red\\\"><b>stderr:</b> {{error}}</pre>\\n<ngx-codemirror \\n  [(ngModel)]=\\\"code\\\" \\n  [(options)]=\\\"options\\\"[autoFocus]=true\\n></ngx-codemirror>\\n\\n<router-outlet></router-outlet>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/markdown/markdown';\nimport 'codemirror/mode/python/python'\nimport { ApiService } from './services/api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'open-ide';\n  code:string = \"\";\n  error;\n  result;\n  options = {\n    lineNumbers: true,\n    theme: 'twilight',\n    // lineWrapping : true,\n    mode: { name: 'python' },\n  };\n  constructor(\n    private _apiService: ApiService,)\n  {}\n\n  public run() {\n    this.result = \"\";\n    this.error = \"\";\n    this._apiService.getSubmissionsToken(this.code.replace('\"','\\\"'))\n      .subscribe((data) => {\n        let submissionsToken = data['token']\n        console.log(\"token:  \"+submissionsToken);\n        this.getResult(submissionsToken);\n      }, (error) => {\n        console.log(error);\n      });\n\n  }\n\n  private getResult(token){\n    this._apiService.getResultBySubmissionsToken(token)\n      .subscribe((data) => {\n        console.log(data);\n        let statusId = data['status']['id'];\n        if (statusId == 1 || statusId == 2){\n          this.getResult(token);\n        }\n        // console.log(this.code)\n        this.result = data['stdout'];\n        this.error = data['stderr']\n      }, (error) => {\n        console.log(error);\n      });\n  }\n\n  changeCodemirrorMode(mode_name){\n    this.options = {\n      lineNumbers: true,\n      theme: 'twilight',\n      // lineWrapping : true,\n      mode: { name: mode_name },\n    };\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { CodemirrorModule  } from '@ctrl/ngx-codemirror';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CodemirrorModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, ɵɵresolveBody } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  constructor(private http: HttpClient) { }\n  API_URL = \"https://api.judge0.com\";\n  SubmissionsTokenRoute = \"/submissions?base64_encoded=false\";\n  resultRoute = \"/submissions/<token>?base64_encoded=false\";\n\n  public getSubmissionsToken(code) {\n    console.log(code);\n    let body = {\"language_id\":\"34\",\"source_code\":code,\"stdin\":\"\"};\n    const myheader = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n    return this.http.post(this.API_URL+this.SubmissionsTokenRoute,JSON.stringify(body),{headers: myheader});\n  }\n\n  public getResultBySubmissionsToken(token){\n    let route = this.resultRoute.replace('<token>',token);\n    return this.http.get(this.API_URL+route);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}